{
  "_from": "stream-each@^1.1.0",
  "_id": "stream-each@1.2.0",
  "_integrity": "sha1-HpXUdXP1gNgU3A/4zQ9m8c5TyZE=",
  "_location": "/npm/mississippi/stream-each",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "stream-each@^1.1.0",
    "name": "stream-each",
    "escapedName": "stream-each",
    "rawSpec": "^1.1.0",
    "saveSpec": null,
    "fetchSpec": "^1.1.0"
  },
  "_requiredBy": [
    "/npm/mississippi"
  ],
  "_resolved": "https://registry.npmjs.org/stream-each/-/stream-each-1.2.0.tgz",
  "_shasum": "1e95d47573f580d814dc0ff8cd0f66f1ce53c991",
  "_shrinkwrap": null,
  "_spec": "stream-each@^1.1.0",
  "_where": "/Users/zkat/Documents/code/npm/node_modules/mississippi",
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "bin": null,
  "bugs": {
    "url": "https://github.com/mafintosh/stream-each/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "end-of-stream": "^1.1.0",
    "stream-shift": "^1.0.0"
  },
  "deprecated": false,
  "description": "Iterate all the data in a stream",
  "devDependencies": {
    "standard": "^5.3.1",
    "tape": "^4.2.1",
    "through2": "^2.0.0"
  },
  "homepage": "https://github.com/mafintosh/stream-each",
  "license": "MIT",
  "main": "index.js",
  "name": "stream-each",
  "optionalDependencies": {},
  "peerDependencies": {},
  "readme": "# stream-each\n\nIterate all the data in a stream\n\n```\nnpm install stream-each\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/stream-each.svg?style=flat)](http://travis-ci.org/mafintosh/stream-each)\n\n## Usage\n\n``` js\nvar each = require('stream-each')\n\neach(stream, function (data, next) {\n  console.log('data from stream', data)\n  // when ready to consume next chunk\n  next()\n}, function (err) {\n  console.log('no more data')\n})\n```\n\n## API\n\n#### `each(stream, iterator, cb)`\n\nIterate the data in the stream by calling the iterator function with `(data, next)`\nwhere data is a data chunk and next is a callback. Call next when you are ready to\nconsume the next chunk. Optionally you can call next with an error to destroy the stream\n\nWhen the stream ends/errors the callback is called if provided\n\n## License\n\nMIT\n\n## Related\n\n`stream-each` is part of the [mississippi stream utility collection](https://github.com/maxogden/mississippi) which includes more useful stream modules similar to this one.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/stream-each.git"
  },
  "scripts": {
    "test": "standard && tape test.js"
  },
  "version": "1.2.0"
}
